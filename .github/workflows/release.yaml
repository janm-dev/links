name: Release

on:
  push:
    tags: ["release-*.*.*"]

permissions:
  contents: write

jobs:
  licenses:
    name: Gather and Publish License Info
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: arduino/setup-protoc@v1
        with:
          version: "3.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          cargo install --locked cargo-about
          cargo about generate -o ATTRIBUTION.html --all-features about.hbs
      - uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: ATTRIBUTION.html

  release:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
    name: Build and Release - Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: arduino/setup-protoc@v1
        with:
          version: "3.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          sudo apt update
          sudo apt install -y musl-tools musl-dev crossbuild-essential-arm64
          cargo build --release --target ${{ matrix.target }}
          mv target/${{ matrix.target }}/release/server server
          mv target/${{ matrix.target }}/release/cli cli
          tar cf ${{ matrix.target }}.tar server cli
          gzip ${{ matrix.target }}.tar
      - uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: ${{ matrix.target }}.tar.gz

  release-windows:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-pc-windows-msvc
    name: Build and Release - Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: arduino/setup-protoc@v1
        with:
          version: "3.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          cargo build --release --target ${{ matrix.target }}
          Compress-Archive -Path "target/${{ matrix.target }}/release/cli.exe", "target/${{ matrix.target }}/release/server.exe" -DestinationPath "${{ matrix.target }}.zip"
      - uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: ${{ matrix.target }}.zip
